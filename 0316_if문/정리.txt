제어문

1.조건문
프로그램 내에서 주어진 조건문의 결과에 따라 별도의 명령을 수행하도록 제어하는 실행문

- if문
- switch문

2.반복문
프로그램 내에서 같은 명령을 일정 횟수만큼 반복하여 수행하도록 제어하는 실행문

- while문
- for문

-----------------------------------------------------------------------------------

if문

1. if 문
if(조건식) {
    조건식의 결과가 참(true)일 때 실행할 문장;
    ....
}

2. if ~ else 문
if(조건식) {
    조건식의 결과가 참(true)일 때 실행할 문장;
    ....
}
else{
     조건식의 결과가 거짓(false)일 때 실행할 문장;
    ....
}
if(조건식) 조건식의 결과가 참(true)일떄 실행할 문장;
else 조건식의 결과가 거짓(false)일때 실행할 문장;

3. if ~ else if ~ else문
if(조건식1) {
    조건식1의 결과가 참(true)일 때 실행할 문장;
    ....
}
else(조건식2){
     조건식의 결과가 거짓(false)일 때 실행할 문장;
    ....
}
else if(조건식3){
     조건식의 결과가 거짓(false)일 때 실행할 문장;
    ....
}

else{ //옵션
    모든 조건식의 결과가 거짓(false)일 떄 실행할 문장;
    ...
}


switch문 if ~ else if문과 마친가지로ㅗ 주어진 조건 값에 따라
프로그램이 다른 명령을 수행하도록 하는 조건

switch(변수 또는  상수){
    case 값1:
    변수 또는 상수의 값이 값1과 일치할 경우 실행할 문장;
    break;
    case 값2:
    변수 또는 상수의 값이 값2과 일치할 경우 실행할 문장;
    default:
    비교값이 모두 일치하지 않을 경우 실행할 문장;
}

***break 문 => 해당 실행문은 실행을 하고 현재 실행중인 switch문에세 종료됨

--------------------------------------------------------------------------------

while 문
조건식이 true인 동안 계속해서 주어진 실행문을 반복

while(조건식){
    조건식의 결과가 참인 동안 반복될 실행문;
    ...
    (조건식을 거짓으로 변경할 실행문)
}

do while 문
while문은 실행문을 실행하기 전에 먼저 조건식부터 검사
do while문은 먼저 실행문을 실행한 후 조건식을 검사

do{
    조건식의 결과가 참인 동안 반복될 실행문;
    ...
    (조건식을 거짓으로 변경할 실행문)
}while(조건식)

for 문
for문은 while문과 달리 자체적으로 초기값, 조건식, 증감식을 모두 포함하고
있는 반복문입니다. while문 보다는 간결하게 반복을 표현할 수 있습니다.

for(초기값: 조건식; 증강식){
    조건식의 결과가 참인 동안 반복할 실행문;
    ...
}

for(let i=1; i<=5; i++){
    console.log('Hello, JavaScrupt!');
}

continue 문
반복중인 문장 내에서 사용하며 해당 문장의 나머지 부분을 건너뛰고
다음 조건식의 판단으로 넘어가게 합니다.

break 문
반복중인 문장 내에서 사용하며 해당 반복문을 완전히 종료시키고
반복문 다음에 위치한 실행문으로 이동

return 문
이 문장을 만나면 현재 실행문의 호출한 곳으로 이동(callback) 

중첩 반복문
반복문이 2개이상 겹쳐있는 문장을 의미합니다.

while(조건식){
    ...
    while(조건식){
        ...
    }
}

for(초기값; 조건식; 증강식){
    ...
    for(초기값; 조건식; 증강식){
        ...
    }
}

-------------------------------------------------------------------------

배열(Array)
이름과 인덱스로 참조되는 정렬된 값의 집합
배열을 구성하는 각각의 값을 배열 요소라고 하며,
배열에서의 위치를 가리키는 숫자를 인덱스라고한다

배열을 만드는 방법

let 배열명;
배 [요소1, 요소2 ,요소3 ...];

let 배열명 = new Array(요소1, 요소2, 요소3 ..);

자바스크립트 배열의 특징
1. 배열 요소의 타입이 고정되어 있지 않음
2. 배열 요소의 인덱스가 연속적이지 않아도 됨
3. Array 객체로 다뤄짐

Array 객체의 메소드
push() : 배열의 요소를 추가
pop() : 배열의 마지막 주소에 있는 값을 제거
shift() : 배열의 첫번째 주소에 있는 값을 제거
concat() : 두 개의 배열을 합침
join() : 배열 요소 사이에 원하는 문자를 삽입
reverse() : 배열을 역순으로 재배치
sort() : 배열을 오름차순으로 정렬