1. 암시적 타입 변환
타입의 값을 기대하는 곳에 다른 타입의 값이 오면 자동으로 타입을
변환해서 사용

*NaN(Not a Number)
정의되지 않은 값이나 표현할 수 없는 값을 뜻
예를들어 0을 0으로 나누거나, 숫자로 변환할 수 없는 연산을 시도한 경우 변환

2.명시적 타입 변환
자바스크립트는 자동으로 타입 변환을 사용하지만 종종 명시적으로 타입을 변환할 필요가 있다

Number() : 문자를 숫자로 변환
String() : 숫자나 불린등을 문자형으로 변환
Boolean() : 문자나 숫자등 불린형으로 변환
Object()  : 모든 자료형을 객체형으로 변환
parseInt() : 문자형을 int형으로 변환
parseFloat():  문자형을 float형을 변환

[연산자]

1. 산술 연산자
산술 연산자는 사칙연산 및 기본적인 연산을 하는 연산자

+ : 덧셈
- : 뺄셈
* : 곱셈
/ : 나눗셈
% : 나눈 나머지 값 (예 : 10 % 3 = 1)
** : 거급제곱 (예 2 ** 2 = 4)

2. 비교 연산자
비교 연산자는 피연산자 사이의 상대적인 크기를 판한하여 참 또는 거짓을 반환

> : 크다
< : 작다
>= : 크거나 같다
<= : 작거나 같다
== : 같다 ("10" == 10 는 true ->타입이 달라도 값이 같으면 참)
=== : 같다 ("10" === 10 는 false -> 타입과 값이 같아야 참)
!= : 다르다 (값만 같으면 false, 값이 같으면 true)
!== : 다르다 (값, 타입 둘 중 하나만 다르면 true)

3. 대입 연산자
변수나 상수에 값을 대입할 때 사용하는 연산자
= : 우측의 값을 왼쪽(변수 또는 상수)에 대입
+=, -=, *=, /=, %=, **=: 우측의 값을 왼쪽의 값과
연산 후 다시 왼쪽(변수)에 대입

let num=10;
num += 5; // num = num + 5; (같은표현)

4. 증강 연산자
증강 션산자는 1씩 값을 증가시키거나 또는 감소시킬 때 사용
연산자의 위치가 어디에 있는지에 따라 결과가 달라질 수 있습니다.

++변수 : 변수의 값을 1증가시킨 후, 다음 연산을 진행
변수++ : 먼저 연산을 수행한 후, 변수의 값을 1증가 시킴
--변수 : 변수의 값을 1감소시킨 후 , 다음 연산을 진행
변수-- : 먼저 연산을 수행한 후 , 변수의 값을 1감소 시킴

let a = 10;
++a; // 11
a++; // 11(12)

5. 논리 연산자
주어진 논리식을 판단하여 참과 거짓을 반환

and(&&) 연산
두 논리식 모두 참이면 반환하는 연산자는

or(||) 연산
두 논리식 중 하나라도 참이면 참을 반환하는 연산자

not(!) 연산자
논리식의 결과가 참이면 거짓으로, 거짓이면 참으로 변환하는 연산자

6. 비트 연산자
논리 연산자와 비슷하지만 비트 단위로 논리 연산을 수행

bit : 컴퓨터의 용량의 최소단위

byte(바이트) : 1byte는 8bit
KB(킬로바이트) : 1KB는 1024byte
MB(메가바이트) : 1MB는 1024KB
GB(기가바이트) : 1GB는 1024MB
TB(테라바이트) : 1TB는 1024GB
PB(페타바이트) : 1PB는 1024TB

7. 삼항 연산자
조건식에 따른 참, 거짓에 따라 반환값이 달라지는 연산자